[{"title":"Markdown使用教程","url":"/2021/05/19/markdown/","content":"markdown的详细使用方法\n\n目录 \nMarkdown标题\n1. =和-标记一二级标题\n2. 使用 # 号标题\n\n\nMarkdown分割线\nMarkdown字体\n删除线\n下划线\n脚注\n表情（Github版本）\n\n\nMarkdown段落\nMarkDown 目录跳转\nMarkdown列表\n无序列表\n有序列表\n列表嵌套\n区块\n复选框列表（Github版本）\n\n\nMarkdown代码\n代码区块\n\n\nMarkdown链接\n高级链接\n用户@提醒\n\n\nMarkdown图片\nMarkdown 表格\n对齐方式\n\n\nMarkdown 高级技巧\n支持的 HTML 元素\n转义\n\n\nGitHub-badge\n静态badge\n动态实时更新badge\n\n\n\nMarkdown标题1. =和-标记一二级标题一级标题&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;二级标题--------------\n效果(示例添加区块以区分)：  \n\n一级标题二级标题\n2. 使用 # 号标题使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。\n# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题\n\n\n一级标题二级标题三级标题四级标题五级标题六级标题\nMarkdown分割线你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：\n**** * ******- - -----------\n\n效果：\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarkdown字体*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___\n\n显示效果如下所示：\n\n\n删除线如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可\n~~hello world~~\n\n效果：\n\nhello world\n\n下划线通过 HTML 的 &lt;u&gt; 标签来实现\n&lt;u&gt;hello world&lt;&#x2F;u&gt;\n\n效果：\n\nhello world\n\n脚注脚注是对文本的补充说明。\nMarkdown 脚注的格式如下:\n[^要注明的文本]\n示例：\n创建脚注格式类似这样 [^tip]。[^tip]: 这是一个脚注。\n\n效果：\n\n创建脚注格式类似这样 ^TIP。\n\n\n\n备注：目前Github原生的issue和markdown预览不支持标准md格式的脚注，可以用锚点的特性+上标标签实现相似的功能，参照维基百科的格式，可以这么做：\n文章内容&lt;sup id&#x3D;&quot;a1&quot;&gt;[[1]](#f1)&lt;&#x2F;sup&gt;&lt;span id&#x3D;&quot;f1&quot;&gt;1. [^](#a1)&lt;&#x2F;span&gt; 脚注1的说明\n\n表情（Github版本）Github的Markdown语法支持添加emoji表情，输入不同的符号码（两个冒号包围的字符）可以显示出不同的表情。\n比如:smile:可以显示 :smile:\n具体每一个表情的符号码，可以查询GitHub的官方网页https://www.webfx.com/tools/emoji-cheat-sheet/\nMarkdown段落Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。\n\n\n当然也可以在段落后面使用一个空行来表示重新开始一个段落。\n\n\nMarkDown 目录跳转MarkDown中是通过定义链接的方式来定义跳转的，在这里，跳转也称为锚点，跳转的目标称为锚点目标；\n所以，在 MarkDown 中实现页面内跳转的方法就是：定义一个锚点目标和对应的锚点，用户点击锚点便可跳转到对应的锚点目标位置处；\n语法：\n锚点 = [内容](#标题)\n\n\n标题 是可选的，可以用单引号 或 双引号；  \n\n对于标题#Hello正确的链接方式是[Hello](#hello)对于标题 #Hello World正确的链接方式为[Hello World](#hello-world)注意：()中的字母均为小写，单词之间有间隔用 &#39;-&#39; 连接\n\n示例：\n# Contents  - [Abstract](#abstract)  - [Preface](#preface)  - [Design idea and innovation point](#design-idea-and-innovation-point)    - [Background](#background)   - [Design inspirations](#design-inspirations)   - [Innovation point](#innovation-point)    - [Developmental vision](#developmental-vision) \n\n\nContents\nAbstract  \nPreface  \nDesign idea and innovation point  \nBackground \nDesign inspirations \nInnovation point  \nDevelopmental vision \n\n\n\n\nMarkdown列表Markdown 支持有序列表和无序列表。\n无序列表无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：\n* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项\n\n效果：\n\n\n第一项\n第二项\n第三项\n\n\n\n\n第一项\n第二项\n第三项\n\n\n\n\n第一项\n第二项\n第三项\n\n\n有序列表有序列表使用数字并加上 . 号来表示，如：\n1. 第一项2. 第二项\n\n效果：\n\n\n第一项\n第二项\n\n\n列表嵌套列表嵌套只需在子列表中的选项前面添加四个空格即可：\n1. 第一项：    - 第一项嵌套的第一个元素    - 第一项嵌套的第二个元素2. 第二项：    - 第二项嵌套的第一个元素    - 第二项嵌套的第二个元素\n\n效果：\n\n\n第一项：\n第一项嵌套的第一个元素\n第一项嵌套的第二个元素\n\n\n第二项：\n第二项嵌套的第一个元素\n第二项嵌套的第二个元素\n\n\n\n\n区块Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：\n&gt; hello world\n效果（本文效果全部默认添加区块以区分）：\n\n\nhello world\n\n\n另外区块是可以嵌套的，一个 &gt; 符号是最外层，两个 &gt; 符号是第一层嵌套，以此类推：\n&gt; 最外层&gt; &gt; 第一层嵌套&gt; &gt; &gt; 第二层嵌套\n\n效果：\n\n\n最外层\n\n第一层嵌套\n\n第二层嵌套\n\n\n\n\n备注：区块和列表可互相嵌套\n复选框列表（Github版本）语法：\n- [x] 需求分析- [x] 系统设计- [x] 详细设计- [ ] 编码- [ ] 测试- [ ] 交付\n\n\n\n 需求分析\n 系统设计\n 详细设计\n 编码\n 测试\n 交付\n\n\n您可以使用这个功能来标注某个项目各项任务的完成情况。\n\nTip:在GitHub的issue中使用该语法是可以实时点击复选框来勾选或解除勾选的，而无需修改issue原文。\n\nMarkdown代码如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：\n&#96;printf()&#96; 函数\n\n效果：\n\nprintf() 函数\n\n代码区块代码区块使用 4 个空格或者一个制表符（Tab 键），例如：\nprintf()printf()\n\n效果：\n\nprintf()\nprintf()\n\n\n你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定,指定语言后可显示代码高亮）。Github版本：我们使用 Linguist 来进行语言识别和语法着色。你可以在 语言 YAML 文件 中查证哪些语言标识符是有效的。：\n$(document).ready(function () &#123;    alert(&#x27;RUNOOB&#x27;);&#125;);\n\n效果：\n\n$(document).ready(function () &#123;    alert(&#x27;RUNOOB&#x27;);&#125;);\n\nMarkdown链接链接使用方法如下：\n[链接名称](链接地址)或者&lt;链接地址&gt;\n\n例如：\n这是一个链接[Baidu](https://www.baidu.com)\n\n效果：\n\n这是一个链接Baidu\n\n直接使用链接地址：\n&lt;https://www.baidu.com&gt;\n\n效果：\n\nhttps://www.baidu.com\n\n高级链接我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：\n这个链接用 1 作为网址变量 [Google][1]这个链接用 2 作为网址变量 [Baidu][2]然后在文档的结尾为变量赋值（网址）  [1]: https:&#x2F;&#x2F;www.google.com&#x2F;  [2]: https:&#x2F;&#x2F;www.Baidu.com&#x2F;\n\n效果：\n\n这个链接用 1 作为网址变量 Google\n这个链接用 2 作为网址变量 Baidu\n然后在文档的结尾为变量赋值（网址）\n\n用户@提醒输入一个@符号，后面跟着一个用户名，会通知那个人来查看评论。 这被称为“@mention” ，因为你提到的是个人。 你也可以@提及组织中的团队。\nMarkdown图片Markdown 图片语法格式如下：\n![alt 属性文本](图片地址)![alt 属性文本](图片地址 &quot;可选标题&quot;)\n\n\n开头一个感叹号 !\n接着一个方括号，里面放上图片的替代文字\n接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 属性的文字\n\n示例：\n![RUNOOB 图标](https:&#x2F;&#x2F;ss3.bdstatic.com&#x2F;70cFv8Sh_Q1YnxGkpoWK1HF6hhy&#x2F;it&#x2F;u&#x3D;441386068,2531499737&amp;fm&#x3D;11&amp;gp&#x3D;0.jpg)![RUNOOB 图标](https:&#x2F;&#x2F;ss3.bdstatic.com&#x2F;70cFv8Sh_Q1YnxGkpoWK1HF6hhy&#x2F;it&#x2F;u&#x3D;441386068,2531499737&amp;fm&#x3D;11&amp;gp&#x3D;0.jpg &quot;Baidu&quot;)\n\n效果：\n\n\n\n\n\n\n你也可以像网址那样对图片网址使用变量:\n这个链接用 1 作为网址变量 [Baidu][1].然后在文档的结尾为变量赋值（网址）[1]: https:&#x2F;&#x2F;www.baidu.com\n\n效果：\n\n这个链接用 1 作为网址变量 Baidu.\n然后在文档的结尾为变量赋值（网址）\n\nMarkdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 &lt;img&gt; 标签。\n示例（将图片缩小到50%）：\n&lt;img src=&quot;https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=441386068,2531499737&amp;fm=11&amp;gp=0.jpg&quot; width=&quot;50%&quot;&gt;\n\n效果：\n\n\n\nMarkdown 表格Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。\n语法格式如下：\n|  表头   | 表头  ||  ----  | ----  || 单元格  | 单元格 || 单元格  | 单元格 |\n\n效果：\n\n\n\n\n表头\n表头\n\n\n\n单元格\n单元格\n\n\n单元格\n单元格\n\n\n\n对齐方式我们可以设置表格的对齐方式：\n\n-: 设置内容和标题栏居右对齐。\n:- 设置内容和标题栏居左对齐。\n:-: 设置内容和标题栏居中对齐。\n\n示例：\n| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 111 | 21 | 321231 || 24241242442 | 3213123 | 4 |\n\n效果：\n\n\n\n\n左对齐\n右对齐\n居中对齐\n\n\n\n111\n21\n321231\n\n\n24241242442\n3213123\n4\n\n\n\nMarkdown 高级技巧支持的 HTML 元素不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。\n目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;br&gt;等 ，如：\n使用 &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 重启电脑\n\n效果：\n\n使用 Ctrl+Alt+Del 重启电脑\n\n转义Markdown 使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown 使用反斜杠转义特殊字符：\n**文本加粗** \\*\\* 正常显示星号 \\*\\*\n\n效果：\n\n文本加粗 \n** 正常显示星号 **\n\nMarkdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：\n\\   反斜线&#96;   反引号*   星号_   下划线&#123;&#125;  花括号[]  方括号()  小括号#   井字号+   加号-   减号.   英文句点!   感叹号\n\nGitHub-badge静态badge效果如下：\n\nbadge生成网站：\nhttps://shields.io/\n进入网站后找到your badge，填入左边标签、右边标签和颜色后可生成：\n\n将生成的链接放在链接图片链接框中即可：\n![](https:&#x2F;&#x2F;img.shields.io&#x2F;badge&#x2F;LP-markdown-green)\n\n也可直接修改链接得到：\nhttps:&#x2F;&#x2F;img.shields.io&#x2F;badge&#x2F;&#123;左半部分标签&#125;-&#123;右半部分标签&#125;-&#123;右半部分颜色&#125;\n\n动态实时更新badgeShields.io 生成的小牌子完全支持动态数据显示，比如粉丝、关注者数量、RSS 订阅者数量……\n动态更新需要可查看此链接\n","categories":["Tutorials"],"tags":["github","markdown"]},{"title":"域名解析教程","url":"/2021/05/18/domain/","content":"域名解析教程访问一个网站输入域名，比如www.baidu.com就可以访问到百度。但是我们在浏览器输入www.baidu.com之后是怎么访问到百度的网页的呢？百度的网页存在服务器里，但是我们并不知道他的服务器在哪？\n\n\n其实就是通过DNS解析到的服务器IP，找到服务器IP之后，我们访问www.baidu.com这个访问请求，就会发给百度的服务器，百度的服务器接收到请求，给你返回了对应的内容，然后我们浏览器收到了内容就给你显示了出来，我们就看到了百度的网页。  \n我们要做的域名解析就是要把域名和IP的对应关系告诉DNS，DNS记下来后有访客访问就返回给他了。不同服务商解析域名的方法大差不差，这里使用腾讯云进行解析讲解\n目录\n所需材料\n域名解析\n主机记录\n记录类型\n\n\nSSL证书\n腾讯云SSL证书\n\n\n\n所需材料\n已实名和备案的域名(我们解析的ip地址在国内，所以域名必须通过备案)\n一台公网ip服务器\n\n域名解析进如腾讯云的域名控制台,点击域名后面的解析。\n\n进入dnspod（腾讯云的是这个，不同服务商的dns解析不一样）\n\n接下来讲一下解析记录里参数都是干啥的\n主机记录主机记录相当于域名的前缀，比如 www\n\n\n\n记录\n解释\n\n\n\nwww\n常见主机记录，将域名解析为 www.callmelp.online\n\n\n@\n直接解析主域名 callmelp.online\n\n\nmail\n将域名解析为 mail.callmelp.online，通常用于邮件服务\n\n\n*\n泛解析，匹配其他所有域名 *.callmelp.online\n\n\n这里可以写任何值，比如你用baidu.com这个域名，记录写baidu，你就可以用baidu.baidu.com访问某个服务器\n记录类型\n\n\n记录类型\n使用目的\n\n\n\nA 记录\n将域名指向一个 IP 地址（外网地址）。\n\n\nCNAME 记录\n将域名指向另一个域名，再由另一个域名提供 IP 地址（外网地址）。\n\n\nMX 记录\n设置邮箱，让邮箱能收到邮件。\n\n\nNS 记录\n将子域名交给其他 DNS 服务商解析。\n\n\nAAAA 记录\n将域名指向一个 IPv6 地址。\n\n\nSRV 记录\n用来标识某台服务器使用了某个服务，常见于微软系统的目录管理。\n\n\nTXT 记录\n对域名进行标识和说明，绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）。\n\n\n隐、显性 URL 记录\n将一个域名指向另外一个已经存在的站点。\n\n\n我们使用A将域名解析到ip地址\n\n例如我们要将abc前缀的域名解析到0.0.0.0这个ip：\n\n确认即可。\nSSL证书为了用户的安全，https使用加密传输。在握手过程中，网站会向浏览器发送SSL证书，SSL证书和我们日常用的身份证类似，是一个支持HTTPS网站的身份证明，SSL证书里面包含了网站的域名，证书有效期，证书的颁发机构以及用于加密传输密码的公钥等信息，由于公钥加密的密码只能被在申请证书时生成的私钥解密，因此浏览器在生成密码之前需要先核对当前访问的域名与证书上绑定的域名是否一致，同时还要对证书的颁发机构进行验证，如果验证失败浏览器会给出证书错误的提示。在这一部分我将对SSL证书的验证过程以及个人用户在访问HTTPS网站时，对SSL证书的使用需要注意哪些安全方面的问题进行描述。\n腾讯云SSL证书进入腾讯云SSL证书管理\n\n点击下载即可。\n","categories":["Tutorials"],"tags":["domain"]},{"title":"Octave简明教程","url":"/2021/05/15/Octave-tutorial/","content":"吴恩达的机器学习课程的作业可以使用Matlab或者octave，这里记录一下octave的基本操作。\n\n\nContents\nContents\n符号\n矩阵\n矩阵初始化\n特殊矩阵初始化\n矩阵索引\n\n\n矩阵变化\n重新赋值\n添加到新行/列\n矩阵向量化\n\n\n矩阵计算\n矩阵相加减\n矩阵相乘除\n矩阵运算\n\n\n内建函数\n画图\n语法\n\n\n\n符号\n\n\n符号\n解释\n\n\n\n%\n注释\n\n\n~=\n不等于\n\n\n;\n结束符\n\n\n&gt;\n大于\n\n\n&lt;\n小于\n\n\n=\n等于\n\n\n+\n加\n\n\n-\n减\n\n\n*\n乘\n\n\n/\n除\n\n\n‘\n转置\n\n\n&gt; , &lt; , =这些符号可以应用到矩阵中，可以将矩阵中的每一个元素和符号后的数字进行比较，最终判断成立返回1， 判断错误返回0.\n示例：\n&gt;&gt; 1+1ans = 2&gt;&gt; 1*8ans = 8&gt;&gt; a = 3a = 3&gt;&gt; a~=1ans = 1&gt;&gt; a~=3ans = 0&gt;&gt; a = [11 2 3; 1 21 3 ; 1 2 32]a =   11    2    3    1   21    3    1    2   32&gt;&gt; a &gt;10ans =  1  0  0  0  1  0  0  0  1&gt;&gt; a == 10ans =  0  0  0  0  0  0  0  0  0&gt;&gt; a == 1ans =  0  0  0  1  0  0  1  0  0&gt;&gt; a&#x27;ans =   11    1    1    2   21    2    3    3   32\n\n矩阵矩阵初始化&gt;&gt; a  = [1 2 3; 4 5 6; 7 8 9]a =   1   2   3   4   5   6   7   8   9\n注：;代表的是换行，每一行中可以拿,隔开也可以不用，直接空开就可以。\n特殊矩阵初始化单位阵：\n&gt;&gt; eye(3)ans =Diagonal Matrix   1   0   0   0   1   0   0   0   1\n全一阵：\n&gt;&gt; ones(3,3) % 前一个3为行数，后一个3为列数ans =   1   1   1   1   1   1   1   1   1\n全零阵：\n&gt;&gt; zeros(2,3)ans =   0   0   0   0   0   0\n随机矩阵：\n&gt;&gt; rand(3,3)ans =   0.1583   0.6459   0.4255   0.4938   0.3079   0.2308   0.1299   0.7594   0.4041\n魔法矩阵：每行，每列，对角的和都相等的矩阵\n&gt;&gt; magic(3)ans =   8   1   6   3   5   7   4   9   2\n矩阵索引:冒号表示从…到…，单独的冒号表示所有\n︋&gt;&gt; a  = [1 2 3; 4 5 6; 7 8 9]&gt;&gt; a(1, 1)  %第一行第一列ans = 1&gt;&gt; a(2, 2)   %第二行第二列ans = 5&gt;&gt; a(1:2, 1:2)   %1到2行，1到2列ans =   1   2   4   5&gt;&gt; a(:, 1:2)     %所有行，1到2列ans =   1   2   4   5   7   8\n矩阵变化以下示例均使用a  = [1 2 3; 4 5 6; 7 8 9]\n重新赋值&gt;&gt; a(1,:) = [7 8 9] %将第一行改为 7 8 9 a =   7   8   9   4   5   6   7   8   9\n添加到新行/列&gt;&gt; a = [a, [10; 11; 12]] %添加列a =    7    8    9   10    4    5    6   11    7    8    9   12&gt;&gt; a  = [1 2 3; 4 5 6; 7 8 9];&gt;&gt; a = [a ;[1 2 3]]  %添加行a =   1   2   3   4   5   6   7   8   9   1   2   3\n矩阵向量化按照列的顺序排布：\n&gt;&gt; a  = [1 2 3; 4 5 6; 7 8 9];&gt;&gt; a(:)ans =   1   4   7   2   5   8   3   6   9\n如果想按行排布，可以使用转置：\n&gt;&gt; a&#x27;(:)ans =   1   2   3   4   5   6   7   8   9\n矩阵计算矩阵相加减&gt;&gt; a+1  ans =    2    3    4    5    6    7    8    9   10&gt;&gt; a+aans =    2    4    6    8   10   12   14   16   18&gt;&gt; a-aans =   0   0   0   0   0   0   0   0   0&gt;&gt; a-1ans =   0   1   2   3   4   5   6   7   8\n矩阵相乘除&gt;&gt; a *a   %叉乘：线性代数中的叉乘ans =    30    36    42    66    81    96   102   126   150&gt;&gt; a.*a    %点乘：对应位置相乘ans =    1    4    9   16   25   36   49   64   81&gt;&gt; a./2    %点除：同上ans =   0.5000   1.0000   1.5000   2.0000   2.5000   3.0000   3.5000   4.0000   4.5000\n矩阵运算&gt;&gt; a.^2    %幂运算ans =    1    4    9   16   25   36   49   64   81&gt;&gt; exp(a)    %指数运算：每个数都求以e为底的指数ans =   2.7183e+00   7.3891e+00   2.0086e+01   5.4598e+01   1.4841e+02   4.0343e+02   1.0966e+03   2.9810e+03   8.1031e+03&gt;&gt; log(a)    %对数运算：以e为底ans =        0   0.6931   1.0986   1.3863   1.6094   1.7918   1.9459   2.0794   2.1972&gt;&gt; log2(a)    %对数运算：以2为底(以什么为底就log什么)ans =        0   1.0000   1.5850   2.0000   2.3219   2.5850   2.8074   3.0000   3.1699&gt;&gt; log10(a)    %对数运算：以10为底ans =        0   0.3010   0.4771   0.6021   0.6990   0.7782   0.8451   0.9031   0.9542\n\n内建函数length()：返回的是长度，有可能是行的个数有，可能是列的个数。这取决于那个时候更大\n&gt;&gt; length(a)ans = 3&gt;&gt; length(rand(5,7))ans = 7\nmax():对于向量来说会返回其中最大的一个数字,对矩阵来说会返回一个向量，向量的每一列对应原来矩阵每一列的最大值\n&gt;&gt; max([ 7 8 9 ])ans = 9&gt;&gt; max(a)ans =   7   8   9&gt;&gt; max(a, [], 2)   %第三个参数表示按行找最大值（若为1则是按列找，默认为1）ans =   3   6   9\nfloor():向下取整ceil():向上取整\n&gt;&gt; floor(10.12)ans = 10&gt;&gt; ceil(10.12)ans = 11\nsum():按行/列相加\n︋&gt;&gt; sum(a,1)   %第二个参数为1时，按列加（默认为1）ans =   12   15   18&gt;&gt; sum(a,2)    %第二个参数为2时，按行加ans =    6   15   24\nflipud():将矩阵上下颠倒\n&gt;&gt; flipud(a)ans =   7   8   9   4   5   6   1   2   3\nrank():求矩阵的秩\n&gt;&gt; rank(a)ans = 2\nrref():将矩阵化为行最简\n&gt;&gt; rref(a)ans =   1.0000        0  -1.0000        0   1.0000   2.0000        0        0        0\npinv():求矩阵的逆矩阵\n&gt;&gt; a=[3,4;2,16]a =    3    4    2   16&gt;&gt; pinv(a)*aans =   1.0000  -0.0000        0   1.0000&gt;&gt; pinv(a)ans =   0.400000  -0.100000  -0.050000   0.075000\n画图&gt;&gt; x = -1:0.1:1;&gt;&gt; y = x.^2;&gt;&gt; plot(x, y)\n\nhold on %若要保留上一次的结果就hold ony2 = -x .^ 2 + 1;plot(x, y2, &#x27;r&#x27;);\n\n% 加标签xlabel(&quot;x value&quot;);ylabel(&quot;y value&quot;);legend(&quot;x^2&quot;, &quot;-x^2+1&quot;); % 对应图中的颜色线条注释title(&quot;first plot&quot;);cd Desktop; print -dpng &quot;firstPlot.png&quot; %会保存到桌面上\n\n语法for循环：\nfor i=1:10  disp(&quot;Hello world&quot;);end;\nwhile循环：\na = 10;while a &gt; 0  disp(&quot;HI&quot;);  a -= 1;end;\nif/else:\n&gt; if a &gt; 1&gt;   disp(&quot;a is bigger than 1&quot;);&gt; else&gt;   disp(&quot;a is smaller than 1&quot;);&gt; endif;&gt;&gt; a is smaller than 1\n创建函数：\nfunction val = func(x, y)    %x,y是函数传入的参数，val是返回值    ...end\n\n\n","categories":["Tutorials"],"tags":["Octave","MachineLearning"]},{"title":"node.js web服务器搭建","url":"/2021/05/11/nodejs-webserver/","content":"使用nodejs搭建文件目录结构的web服务器,以及node forever模块的使用\n\n\nnodejs的安装和使用以及npm的使用方法自己查\n目录\n目录\nweb服务器搭建\n安装对应库\n获得https的ssl证书\n文件目录\n运行\nserve.js代码（web根目录）\n\n\nforever说明\nforever安装和使用\n安装\n使用\n\n\n\n\n\nweb服务器搭建安装对应库npm install expressnpm install serve-index\n\n获得https的ssl证书购买域后进行实名认证，通过后即可下载\n文件目录\n\ncert:存放ssl证书node_modules:nodejs的库public:web页面的目录server.js:web服务器代码               \n运行sudo forever start server.js\nforever可以不占用终端在后台运行\n停止：\nsudo forever stop server.js\n\n说明：forever需要用npm下载\n\n如果想临时使用或者查看log，可以使用node运行： \nsudo node server.js\n\nserve.js代码（web根目录）&#x27;use strict&#x27;var http = require(&#x27;http&#x27;);var https = require(&#x27;https&#x27;);var fs = require(&#x27;fs&#x27;);var serveIndex = require(&#x27;serve-index&#x27;);var express = require(&#x27;express&#x27;);var app = express();//顺序不能换app.use(serveIndex(&#x27;./public&#x27;));app.use(express.static(&#x27;./public&#x27;));var options = &#123;\tkey  : fs.readFileSync(&#x27;./cert/callmelp.online.key&#x27;),\tcert : fs.readFileSync(&#x27;./cert/callmelp.online.pem&#x27;) &#125;var https_server = https.createServer(options, app);https_server.listen(443, &#x27;0.0.0.0&#x27;);var http_server = http.createServer(app);http_server.listen(80, &#x27;0.0.0.0&#x27;);\n\nforever说明forever Github地址\nforever可以看做是一个nodejs的守护进程，能够启动，停止，重启我们的app应用。\nforever的用途就是帮我们更好的管理我们node App服务，本质上就是在forever进程之下，创建一个node app的子进程。使用类似于service apache2 start这样的命令即可操作node后台运行。\n更好的一点就是每次更改文件，它都可以帮你自动重启服务而不需要手动重启（需要配置持续监听-w）\nforever安装和使用安装npm install forever -g  &#x2F;&#x2F;-g 全局安装\n\n使用\n启动相关&#x2F;&#x2F; 1. 简单的启动forever start app.js&#x2F;&#x2F; 2. 指定forever信息输出文件，当然，默认它会放到~&#x2F;.forever&#x2F;forever.logforever start -l forever.log app.js&#x2F;&#x2F; 3. 指定app.js中的日志信息和错误日志输出文件，&#x2F;&#x2F; -o 就是console.log输出的信息，-e 就是console.error输出的信息forever start -o out.log -e err.log app.js&#x2F;&#x2F; 4. 追加日志，forever默认是不能覆盖上次的启动日志，&#x2F;&#x2F; 所以如果第二次启动不加-a，则会不让运行forever start -l forever.log -a app.js&#x2F;&#x2F; 5. 监听当前文件夹下的所有文件改动，并重启服务forever start -w app.js&#x2F;&#x2F; 6. 显示所有运行的服务forever list\n停止&#x2F;&#x2F; 1. 停止所有运行的node Appforever stopall&#x2F;&#x2F; 2. 停止其中一个node Appforever stop app.js&#x2F;&#x2F; 当然还可以这样&#x2F;&#x2F; forever list 找到对应的id，然后：forever stop [id]\n重启&#x2F;&#x2F; 1. 启动所有forever restartall&#x2F;&#x2F; 2. 重启其中一个node Appforever restart app.js\n\n","categories":["Tutorials"],"tags":["node.js"]},{"title":"hexo使用教程","url":"/2021/05/11/hexo-tutorial/","content":"记录一下每次使用hexo写博文会使用的操作\n\n\n写新博客打开git bash或者cmd，进入hexo存放的工作目录\ngitbash：  \n终端执行：  \nhexo new &#39;xxx&#39;\n\n(xxx为文件名)进如上图显示的目录，即可看到新创建的md文件。\n上传githubgitbash或者cmd在hexo的工作目录下输入：  \nhexo d -g\n（-g参数一定要加 先生成再上传）\n我这里是配置好了github的上传操作，如果没有配置过可以看我的上一篇文章\n","categories":["Tutorials"],"tags":["hexo"]},{"title":"hexo+github搭建个人博客总结","url":"/2021/04/27/hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%80%BB%E7%BB%93/","content":"目录\ngithub生成仓库  \n配置ssh  \nhexo安装\n上传github\n常用hexo命令\n写博客工具\n如何让博文列表不显示全部内容\n参考\n\ngithub生成仓库新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 http://test.github.io 了，是不是很方便？\n由此可见，每一个github账户最多只能创建一个这样可以直接使用域名访问的仓库。\n创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。\n配置ssh（略）hexo安装用git bash直接安装，代码：\n$ npm install -g hexo\n\n在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是F:\\Workspaces\\hexo，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。\n$ cd &#x2F;f&#x2F;Workspaces&#x2F;hexo&#x2F;$ hexo init\n\nhexo会自动下载一些文件到这个目录，包括node_modules。\n$ hexo g # 生成$ hexo s # 启动服务\n执行以上命令之后，hexo就会在public文件夹生成相关html文件，这些public里的文件将来都是要提交到github去的。\nhexo s是开启本地预览服务，打开浏览器访问 http://localhost:4000 即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为4000这个端口太常见了，解决端口冲突问题请参考这篇文章：\nhttp://blog.liuxianan.com/windows-port-bind.html\n上传github如果你一切都配置好了，发布上传很容易，一句hexo d就搞定，当然关键还是你要把所有东西配置好。\n首先，ssh key肯定要配置好。\n其次，配置_config.yml中有关deploy的部分：\n正确写法：\ndeploy:  type: git  repository: git@github.com:liuxianan&#x2F;liuxianan.github.io.git(不是https那个)  branch: master\n此时直接执行hexo d的话一般会报如下错误：\nDeployer not found: github 或者 Deployer not found: git\n\n原因是还需要安装一个插件：\nnpm install hexo-deployer-git --save\n\n其它命令不确定，部署这个命令一定要用git bash，否则会提示Permission denied (publickey).\n打开你的git bash，输入hexo d就会将本次有改动的代码全部提交，没有改动的不会提交。\n常用hexo命令常见命令：\nhexo new &quot;postName&quot; #新建文章hexo new page &quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，&#39;ctrl + c&#39;关闭server）hexo deploy #部署到GitHubhexo help  # 查看帮助hexo version  #查看Hexo的版本\n\n缩写：\nhexo n &#x3D;&#x3D; hexo newhexo g &#x3D;&#x3D; hexo generatehexo s &#x3D;&#x3D; hexo serverhexo d &#x3D;&#x3D; hexo deploy\n\n##写博客\n定位到我们的hexo根目录，执行命令：\nhexo new &#39;my-first-blog&#39;\n\nhexo会帮我们在_posts下生成相关md文件，我们只需要打开这个文件就可以开始写博客了（想删除博文是只用删掉对应生成的md文件就行了）。\n写博客工具具体用什么还是看个人喜好，我用vscode非常方便。只需要下载两个插件：\nMarkdown All in One\nMarkdown Preview Github Styling\n\n在vscode里写完可以直接看到md生成的效果。\n如何让博文列表不显示全部内容默认情况下，生成的博文目录会显示全部的文章内容，如何设置文章摘要的长度呢？\n答案是在合适的位置加上&lt;!--more--&gt;即可，例如：\n使用github pages服务搭建博客的好处有：1. 全是静态文件，访问速度快；2. 免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；3. 可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；&lt;!--more--&gt;4. 数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；5. 博客内容可以轻松打包、转移、发布到其它平台；6. 等等；\n\n参考使用hexo+github搭建免费个人博客详细教程\nhexo官方中文文档\n","categories":["Log"],"tags":["hexo","github"]},{"title":"Hello World","url":"/2021/04/27/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","categories":[],"tags":[]}]